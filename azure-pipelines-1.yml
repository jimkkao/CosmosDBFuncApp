# .NET Core Function App to Windows on Azure
# Build a .NET Core function app and deploy it to Azure as a Windows function App.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '1615494d-e0f7-4735-99fd-e2da98531d15'

  # Function app name
  functionAppName: 'CosmosdbFuncApp'

  # Agent VM image name
  vmImageName: 'vs2017-win2016'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: CredScan@2
      inputs:
        toolMajorVersion: 'V1'
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: |
          **/*.csproj
        arguments: --output publish_output --configuration Release
  
    - task: CodeMetrics@1
      inputs:
        Files: '$(Build.SourcesDirectory)\**\*.exe;$(Build.SourcesDirectory)\**\*.dll'

    - task: SdtReport@1
      inputs:
        AllTools: true
        BinSkimBreakOn: 'Error'
        CodesignValidationBreakOn: 'Error'
        FxCopBreakOn: 'ErrorAbove'
        ModernCopBreakOn: 'Error'
        PoliCheckBreakOn: 'Severity1'
        RoslynAnalyzersBreakOn: 'Error'
        SemmleBreakOn: 'Error'
        TSLintBreakOn: 'Error'
        ToolLogsNotFoundAction: 'Standard'

    - task: PostAnalysis@1
      inputs:
          AllTools: true
          BinSkimBreakOn: 'Error'
          CodesignValidationBreakOn: 'Error'
          FxCopBreakOn: 'ErrorAbove'
          ModernCopBreakOn: 'Error'
          PoliCheckBreakOn: 'Severity1'
          RoslynAnalyzersBreakOn: 'Error'
          SemmleBreakOn: 'Error'
          TSLintBreakOn: 'Error'
          ToolLogsNotFoundAction: 'Standard'
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop
    - task: PublishSecurityAnalysisLogs@2
      inputs:
        ArtifactName: 'CodeAnalysisLogs'
        ArtifactType: 'Container'
        AllTools: true
        ToolLogsNotFoundAction: 'Standard'
        
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:

          steps:
          - task: AzureFunctionApp@1
            displayName: 'Azure functions app deploy'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: functionApp
              appName: $(functionAppName)
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              
